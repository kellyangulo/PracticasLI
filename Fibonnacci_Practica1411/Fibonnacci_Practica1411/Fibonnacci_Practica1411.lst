Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 1 - 1


								TITLE	Programa para mostrar los primeros 10 numeros de Fibonnacci
								PAGE	60, 132

								.586
								.MODEL	FLAT, STDCALL

				Include	<Macros.inc>
			      C ; Macros.inc
			      C ; Contiene las macros para convertir enteros a cadena y viceversa
			      C 
			      C ; MacroEnteroACadena
			      C ; Esta macro convierte un entero de 32 bits con signo
			      C ; en su representación en cadena para su impresión posterior
			      C ; usando la función WriteConsoleA
			      C 
			      C 
			      C MacroEnteroACadena	MACRO	Numero, Cadena, Contador
			      C LOCAL	Inicio
			      C LOCAL	Repetir
			      C LOCAL	Sacar
			      C 			PUSHAD				; Salvar todos los registros
			      C 			LEA	ESI, Cadena
			      C 			MOV	BYTE PTR [ESI], ' '	; Positivo, no lleva signo
			      C 			MOV	EAX, Numero
			      C 			TEST	EAX, 80000000H
			      C 			JZ	Inicio
			      C 			; Numero negativo
			      C 			; Poner signo e invertir
			      C 			MOV	BYTE PTR [ESI], '-'
			      C 			NEG	EAX
			      C 
			      C Inicio:
			      C 			INC	ESI			; Siguiente posición después del signo
			      C 			MOV	ECX, 0			; Contador de caracteres
			      C 			MOV	EBX, 10			; Dividir entre 10
			      C 
			      C Repetir:
			      C 			INC	ECX
			      C 			CDQ				; EDX:EAX <- EAX
			      C 			DIV	EBX
			      C 			PUSH	EDX			; Residuo en la pila
			      C 			CMP	EAX, 0			; ¿Seguir dividiendo?
			      C 			JNE	Repetir
			      C 
			      C 			; ECX tiene el total de caracteres
			      C 			MOV	Contador, ECX
			      C 			INC	Contador		; Por el signo
			      C 
			      C 			; Sacar los residuos de la pila y convertirlos en caracteres
			      C Sacar:
			      C 			POP	EDX
			      C 			OR	DL, 30H			; Convertir caractera a ASCII
			      C 			MOV	[ESI], DL
			      C 			INC	ESI
			      C 			LOOP	Sacar
			      C 
			      C 			; Fin. Cadena tiene el número y Contador el total de caracteres
			      C 			POPAD				; Recuperar todos los registros
			      C 			ENDM
			      C 
			      C 
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 2 - 1


			      C MacroCadenaAEntero	MACRO	Cadena, Numero
			      C LOCAL Saltar
			      C LOCAL SiguienteEspacio
			      C LOCAL VerificarSigno
			      C LOCAL Empezar
			      C LOCAL Terminar
			      C LOCAL Salir
			      C 			PUSHAD
			      C 
			      C 			LEA	ESI, Cadena
			      C 			MOV	EAX, 0
			      C 			MOV	EBX, 10
			      C 			MOV	EDI, 0			; Positivo
			      C 
			      C 			;Saltar blancos y tabuladores
			      C Saltar:
			      C 			CMP	BYTE PTR [ESI], 32	; Espacio en blanco
			      C 			JE	SiguienteEspacio
			      C 			CMP	BYTE PTR [ESI], 9	; Tabulador
			      C 			JNE	VerificarSigno
			      C SiguienteEspacio:
			      C 			INC	ESI
			      C 			JMP	Saltar
			      C 
			      C 			;El signo solo puede ser el primer caracter
			      C VerificarSigno:
			      C 			CMP	BYTE PTR [ESI], '-'
			      C 			JNE	Empezar
			      C 			MOV	EDI, 1			; Negativo
			      C 			INC	ESI
			      C 
			      C 			; Convertir dígitos a números
			      C 			; Salir cuando no sea dígito
			      C Empezar:
			      C 			CMP	BYTE PTR [ESI], '0'
			      C 			JB	Terminar		; Si es menor que 0
			      C 			CMP	BYTE PTR [ESI], '9'
			      C 			JA	Terminar		; Si es mayor que 0
			      C 			MUL	EBX
			      C 			MOV	DL, [ESI]
			      C 			AND	EDX, 0000000FH		; Convertir dígito a número
			      C 			ADD	EAX, EDX
			      C 			INC	ESI
			      C 			JMP	Empezar
			      C 
			      C 			; Si tenía signo, negar el número
			      C Terminar:		CMP	EDI, 0
			      C 			JE	Salir
			      C 			NEG	EAX
			      C 
			      C 			; Dejarlo en número
			      C Salir:			MOV	Numero, EAX
			      C 			POPAD
			      C 			ENDM
			      C 

Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 3 - 1


				; Prototipos de llamadas a servicios del sistema operativo

				GetStdHandle	PROTO	:DWORD
				WriteConsoleA	PROTO	:DWORD,	:DWORD,	:DWORD,	:DWORD,	:DWORD
				ExitProcess		PROTO	CodigoSalida:DWORD

								.STACK
 00000000							.DATA
 00000000 00000000		F				DWORD	0
 00000004 00000001		F1				DWORD	1
 00000008 00000001		F2				DWORD	1
 0000000C 4C 6F 73 20 70	MenSal01		BYTE	"Los primeros 10 numeros de la serie de Fibonnacci son: ", 13, 10
	   72 69 6D 65 72
	   6F 73 20 31 30
	   20 6E 75 6D 65
	   72 6F 73 20 64
	   65 20 6C 61 20
	   73 65 72 69 65
	   20 64 65 20 46
	   69 62 6F 6E 6E
	   61 63 63 69 20
	   73 6F 6E 3A 20
	   0D 0A
 00000045 = 00000039		Long_MS01		EQU		$ - MenSal01

				; Variables para las llamadas al sistema operativo
 00000045 00000000		ManejadorS		DWORD	0
 00000049 00000000		Caracteres		DWORD	0
 0000004D  0000000D [		Texto			BYTE	13 DUP ( ' ' )
	    20
	   ]
 0000005A 0D 0A			SaltoLinea		BYTE	13, 10
 =-0000000B			STDOUT			EQU		-11

 00000000							.CODE
 00000000			Principal		PROC
								; Obtener manejador de salida
								INVOKE	GetStdHandle, STDOUT
 00000007  A3 00000045 R					MOV		ManejadorS, EAX

								; Mostrar encabezado
 0000000C  B8 00000039						MOV		EAX, Long_MS01
								INVOKE	WriteConsoleA, ManejadorS, ADDR MenSal01, EAX, ADDR Caracter
				es, 0

								; Mostrar el primer numero de Fibonnacci
								MacroEnteroACadena	F1, Texto, Caracteres
 00000029  60		     1				PUSHAD				; Salvar todos los registros
 0000002A  8D 35 0000004D R  1				LEA	ESI, Texto
 00000030  C6 06 20	     1				MOV	BYTE PTR [ESI], ' '	; Positivo, no lleva signo
 00000033  A1 00000004 R     1				MOV	EAX, F1
 00000038  A9 80000000	     1				TEST	EAX, 80000000H
 0000003D  74 05	     1				JZ	??0000
 0000003F  C6 06 2D	     1				MOV	BYTE PTR [ESI], '-'
 00000042  F7 D8	     1				NEG	EAX
 00000044		     1	??0000:
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 4 - 1


 00000044  46		     1				INC	ESI			; Siguiente posición después del signo
 00000045  B9 00000000	     1				MOV	ECX, 0			; Contador de caracteres
 0000004A  BB 0000000A	     1				MOV	EBX, 10			; Dividir entre 10
 0000004F		     1	??0001:
 0000004F  41		     1				INC	ECX
 00000050  99		     1				CDQ				; EDX:EAX <- EAX
 00000051  F7 F3	     1				DIV	EBX
 00000053  52		     1				PUSH	EDX			; Residuo en la pila
 00000054  83 F8 00	     1				CMP	EAX, 0			; ¿Seguir dividiendo?
 00000057  75 F6	     1				JNE	??0001
 00000059  89 0D 00000049 R  1				MOV	Caracteres, ECX
 0000005F  FF 05 00000049 R  1				INC	Caracteres		; Por el signo
 00000065		     1	??0002:
 00000065  5A		     1				POP	EDX
 00000066  80 CA 30	     1				OR	DL, 30H			; Convertir caractera a ASCII
 00000069  88 16	     1				MOV	[ESI], DL
 0000006B  46		     1				INC	ESI
 0000006C  E2 F7	     1				LOOP	??0002
 0000006E  61		     1				POPAD				; Recuperar todos los registros
								INVOKE	WriteConsoleA, ManejadorS, ADDR Texto, Caracteres, ADDR Cara
				cteres, 0
								; Salto de línea
								INVOKE	WriteConsoleA, ManejadorS, ADDR SaltoLinea, 2, ADDR Caracter
				es, 0

								; Mostrar el segundo numero de Fibonnacci
								MacroEnteroACadena	F2, Texto, Caracteres
 000000A5  60		     1				PUSHAD				; Salvar todos los registros
 000000A6  8D 35 0000004D R  1				LEA	ESI, Texto
 000000AC  C6 06 20	     1				MOV	BYTE PTR [ESI], ' '	; Positivo, no lleva signo
 000000AF  A1 00000008 R     1				MOV	EAX, F2
 000000B4  A9 80000000	     1				TEST	EAX, 80000000H
 000000B9  74 05	     1				JZ	??0003
 000000BB  C6 06 2D	     1				MOV	BYTE PTR [ESI], '-'
 000000BE  F7 D8	     1				NEG	EAX
 000000C0		     1	??0003:
 000000C0  46		     1				INC	ESI			; Siguiente posición después del signo
 000000C1  B9 00000000	     1				MOV	ECX, 0			; Contador de caracteres
 000000C6  BB 0000000A	     1				MOV	EBX, 10			; Dividir entre 10
 000000CB		     1	??0004:
 000000CB  41		     1				INC	ECX
 000000CC  99		     1				CDQ				; EDX:EAX <- EAX
 000000CD  F7 F3	     1				DIV	EBX
 000000CF  52		     1				PUSH	EDX			; Residuo en la pila
 000000D0  83 F8 00	     1				CMP	EAX, 0			; ¿Seguir dividiendo?
 000000D3  75 F6	     1				JNE	??0004
 000000D5  89 0D 00000049 R  1				MOV	Caracteres, ECX
 000000DB  FF 05 00000049 R  1				INC	Caracteres		; Por el signo
 000000E1		     1	??0005:
 000000E1  5A		     1				POP	EDX
 000000E2  80 CA 30	     1				OR	DL, 30H			; Convertir caractera a ASCII
 000000E5  88 16	     1				MOV	[ESI], DL
 000000E7  46		     1				INC	ESI
 000000E8  E2 F7	     1				LOOP	??0005
 000000EA  61		     1				POPAD				; Recuperar todos los registros
								INVOKE	WriteConsoleA, ManejadorS, ADDR Texto, Caracteres, ADDR Cara
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 5 - 1


				cteres, 0
								; Salto de línea
								INVOKE	WriteConsoleA, ManejadorS, ADDR SaltoLinea, 2, ADDR Caracter
				es, 0

								; Ciclo para calcular los 8 numeros restantes
 00000121  B9 00000008						MOV		ECX, 8
 00000126			Inicio:
 00000126  A1 00000004 R					MOV		EAX, F1
 0000012B  03 05 00000008 R					ADD		EAX, F2
 00000131  A3 00000000 R					MOV		F, EAX

 00000136  51							PUSH	ECX			; Salvar el ECX

								; Mostrar el siguiente numero de Fibonnacci
								MacroEnteroACadena	F, Texto, Caracteres
 00000137  60		     1				PUSHAD				; Salvar todos los registros
 00000138  8D 35 0000004D R  1				LEA	ESI, Texto
 0000013E  C6 06 20	     1				MOV	BYTE PTR [ESI], ' '	; Positivo, no lleva signo
 00000141  A1 00000000 R     1				MOV	EAX, F
 00000146  A9 80000000	     1				TEST	EAX, 80000000H
 0000014B  74 05	     1				JZ	??0006
 0000014D  C6 06 2D	     1				MOV	BYTE PTR [ESI], '-'
 00000150  F7 D8	     1				NEG	EAX
 00000152		     1	??0006:
 00000152  46		     1				INC	ESI			; Siguiente posición después del signo
 00000153  B9 00000000	     1				MOV	ECX, 0			; Contador de caracteres
 00000158  BB 0000000A	     1				MOV	EBX, 10			; Dividir entre 10
 0000015D		     1	??0007:
 0000015D  41		     1				INC	ECX
 0000015E  99		     1				CDQ				; EDX:EAX <- EAX
 0000015F  F7 F3	     1				DIV	EBX
 00000161  52		     1				PUSH	EDX			; Residuo en la pila
 00000162  83 F8 00	     1				CMP	EAX, 0			; ¿Seguir dividiendo?
 00000165  75 F6	     1				JNE	??0007
 00000167  89 0D 00000049 R  1				MOV	Caracteres, ECX
 0000016D  FF 05 00000049 R  1				INC	Caracteres		; Por el signo
 00000173		     1	??0008:
 00000173  5A		     1				POP	EDX
 00000174  80 CA 30	     1				OR	DL, 30H			; Convertir caractera a ASCII
 00000177  88 16	     1				MOV	[ESI], DL
 00000179  46		     1				INC	ESI
 0000017A  E2 F7	     1				LOOP	??0008
 0000017C  61		     1				POPAD				; Recuperar todos los registros
								INVOKE	WriteConsoleA, ManejadorS, ADDR Texto, Caracteres, ADDR Cara
				cteres, 0
								; Salto de línea
								INVOKE	WriteConsoleA, ManejadorS, ADDR SaltoLinea, 2, ADDR Caracter
				es, 0

 000001B3  59							POP		ECX			; Recuperar el ECX

								; Dos anterior
 000001B4  A1 00000004 R					MOV		EAX, F1
 000001B9  A3 00000008 R					MOV		F2, EAX

Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Page 6 - 1


								; Uno anterior
 000001BE  A1 00000000 R					MOV		EAX, F
 000001C3  A3 00000004 R					MOV		F1, EAX

								;LOOP	Inicio
 000001C8  49							DEC		ECX
 000001C9  0F 85 FFFFFF57					JNZ		Inicio

								; Salir al S. O.
								INVOKE	ExitProcess, 0
 000001D6			Principal		ENDP
								END		Principal
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Symbols 7 - 1




Macros:

                N a m e                 Type

MacroCadenaAEntero . . . . . . .	Proc
MacroEnteroACadena . . . . . . .	Proc
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Symbols 8 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00000400 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000005C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001D6 Para	  Public  'CODE'	
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Symbols 9 - 1




Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Principal  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001D6 Public STDCALL
  ??0000 . . . . . . . . . . . .	L Near	 00000044 _TEXT	
  ??0001 . . . . . . . . . . . .	L Near	 0000004F _TEXT	
  ??0002 . . . . . . . . . . . .	L Near	 00000065 _TEXT	
  ??0003 . . . . . . . . . . . .	L Near	 000000C0 _TEXT	
  ??0004 . . . . . . . . . . . .	L Near	 000000CB _TEXT	
  ??0005 . . . . . . . . . . . .	L Near	 000000E1 _TEXT	
  Inicio . . . . . . . . . . . .	L Near	 00000126 _TEXT	
  ??0006 . . . . . . . . . . . .	L Near	 00000152 _TEXT	
  ??0007 . . . . . . . . . . . .	L Near	 0000015D _TEXT	
  ??0008 . . . . . . . . . . . .	L Near	 00000173 _TEXT	
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Microsoft (R) Macro Assembler Version 14.23.28105.4	    11/14/19 08:14:00
;Programa para mostrar los primeros 10 numeros de Fibonnacc  Symbols 10 - 1




Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Caracteres . . . . . . . . . . .	DWord	 00000049 _DATA	
F1 . . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
F2 . . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
F  . . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
Long_MS01  . . . . . . . . . . .	Number	 00000039h   
ManejadorS . . . . . . . . . . .	DWord	 00000045 _DATA	
MenSal01 . . . . . . . . . . . .	Byte	 0000000C _DATA	
STDOUT . . . . . . . . . . . . .	Number	 -0000000Bh   
SaltoLinea . . . . . . . . . . .	Byte	 0000005A _DATA	
Texto  . . . . . . . . . . . . .	Byte	 0000004D _DATA	

	   0 Warnings
	   0 Errors
